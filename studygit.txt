本文档首先用于git的学习
创建文件夹：
$ mkdir learnDeeplearning
打开文件夹
$ cd learnDeeplearning
显示文件路径
$ pwd
创建版本库
$ git init
添加文件
$ git add studygit.txt
添加一个文件夹
$ git add 文件夹
将文件提交到仓库
$ git commit -m "wrote a readme file"
实时检查仓库文件的情况，是否有修改未保存的文件
$ git status
检查上次的修改
$ git diff
显示从最近到最远的提交日志
$ git log
简化版输出日志
$ git log --pretty=oneline
回退到上一版本
$ git reset --hard HEAD^
设置为任意版本
$ git reset --hard 版本号
查看每一次命令
$ git reflog
查看工作区和版本库里面最新版本的区别
$ git diff HEAD -- readme.txt
丢弃工作区的修改
$ git checkout -- readme.txt
删除文件方法
$ git rm test.txt
$ git commit -m "remove test.txt"
添加远程库-github
$ git remote add origin git@github.com:HustZhangwei/learnDeeplearning.git
将REARME.md拷贝到本地
$ git pull --rebase origin master
$ git push -u origin master
第一次推送
$ git push -u origin master
之后推送
$ git push origin master
克隆一个本地库
$ git clone git@github.com:HustZhangwei/gitskills.git
查看分支
$ git branch
创建分支
$ git branch <name>
切换分支
$ git checkout <name>
创建+切换分支
$ git checkout -b <name>
合并某分支到当前分支
$ git merge <name>
删除分支：
$ git branch -d <name>
分支合并图查看
$ git log --graph
把当前工作现场“储藏”起来，等以后恢复现场后继续工作
$ git stash
查看工作区
$ git stash list
恢复工作区1+删除工作区内容
$ git stash apply
$ git stash drop
恢复工作区2
$ git stash pop
丢弃一个没有被合并过的分支
$ git branch -D <name>
查看远程库的信息
$ git remote
查看远程库详细信息
$ git remote -v
推送分支，就是把该分支上的所有本地提交推送到远程库
$ git push origin master
设置dev和origin/dev的链接
$ git branch --set-upstream-to=origin/dev dev
先用git pull把最新的提交从origin/dev抓下来，然后，在本地合并，解决冲突，再推送
$ git pull
把分叉的提交历史“整理”成一条直线，看上去更直观
$ git rebase
创建标签
$ git branch
$ git checkout master
$ git tag v1.0
对特定版本打标签
$ git tag v0 checkID
查看所有标签
$ git tag
删除标签
$ git tag -d v0.1
推送某个标签到远程
$ git push origin <tagname>
一次性推送全部尚未推送到远程的本地标签
$ git push origin --tags
删除一个远程标签
$ git push origin :refs/tags/<tagname>
让Git显示颜色
$ git config --global color.ui true
